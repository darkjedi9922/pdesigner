-- phpMyAdmin SQL Dump
-- version 4.6.6deb5
-- https://www.phpmyadmin.net/
--
-- Хост: localhost:3306
-- Время создания: Июл 07 2019 г., 16:24
-- Версия сервера: 5.7.26-0ubuntu0.18.04.1
-- Версия PHP: 7.2.19-0ubuntu0.18.04.1

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- База данных: `pdesigner`
--

-- --------------------------------------------------------

--
-- Структура таблицы `issues`
--

CREATE TABLE `issues` (
  `id` int(10) UNSIGNED NOT NULL,
  `project_id` int(10) UNSIGNED NOT NULL,
  `number` int(10) UNSIGNED NOT NULL,
  `parent_issue_id` int(10) UNSIGNED DEFAULT NULL,
  `group_id` int(10) UNSIGNED NOT NULL,
  `title` varchar(255) NOT NULL,
  `status` tinyint(1) NOT NULL DEFAULT '0'
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

--
-- Дамп данных таблицы `issues`
--

INSERT INTO `issues` (`id`, `project_id`, `number`, `parent_issue_id`, `group_id`, `title`, `status`) VALUES
(55, 1, 10, 54, 1, 'Страница с формой', 1),
(53, 1, 8, NULL, 1, 'Http Status', 0),
(54, 1, 9, NULL, 1, 'Обратная связь', 0),
(127, 3, 5, 126, 3, 'Главный родительский класс, сохраняющий своих детей', 1),
(47, 1, 2, NULL, 1, 'Config вместо Ini', 0),
(48, 1, 3, NULL, 1, 'PHP 5 vs PHP 7', 1),
(49, 1, 4, NULL, 1, 'Защита от CSRF', 1),
(50, 1, 5, NULL, 1, 'Защита от Clickjacking', 0),
(51, 1, 6, NULL, 1, 'Своя хеширующая пароли и тд функция', 0),
(52, 1, 7, NULL, 1, 'Улучшить демонов', 0),
(56, 1, 11, 54, 1, 'Формат данных по всем правилам документации', 0),
(57, 1, 12, 54, 1, 'Попробовать отправлять письма через Google API (помнишь CS50?)', 0),
(58, 1, 13, NULL, 1, 'Система исключений', 1),
(59, 1, 14, NULL, 1, 'Настройка dev mode', 0),
(104, 3, 1, NULL, 3, 'Интегрировать SqlPagedList&#039;ы в сами ObjectInfo объекты', 3),
(69, 1, 16, NULL, 1, 'Добавить функцию в библиотеку, которая экранирует уже закодированные спецсимволы (кавычки) для показа текста в html', 0),
(105, 3, 2, 104, 3, 'ObjectInfo =&gt; Model', 3),
(106, 2, 13, NULL, 2, 'Добавление задач', 1),
(75, 1, 18, 49, 1, 'Посмотреть другие виды обеспечения безопасности', 0),
(92, 2, 2, 91, 2, 'Защита от неправильных параметров в адресах страниц', 0),
(91, 2, 1, NULL, 2, 'Безопасность', 0),
(94, 2, 3, 91, 2, 'Защита от неправильных данных в формах', 0),
(95, 2, 4, NULL, 2, 'Группировка задач', 1),
(96, 2, 5, NULL, 2, 'Визуальный редактор описаний', 1),
(97, 2, 6, NULL, 2, 'Пользователи', 0),
(98, 2, 7, 97, 2, 'Привязка проектов к пользователям', 0),
(99, 2, 8, NULL, 2, 'Описание проектов', 1),
(100, 2, 9, NULL, 2, 'Бар задач', 1),
(101, 2, 10, NULL, 2, 'Удаление проектов', 1),
(102, 2, 11, NULL, 2, 'ЧПУ', 1),
(103, 2, 12, 96, 2, 'Изображения', 0),
(107, 2, 14, 106, 2, 'Добавление подзадач', 1),
(108, 2, 15, 106, 2, 'Добавление родительской задачи', 0),
(109, 2, 16, 95, 2, 'Перемещение задач из одной группы в другую', 0),
(110, 2, 17, 95, 2, 'Выбор цвета группы', 1),
(111, 2, 18, 110, 2, 'Контекстное меню', 1),
(112, 2, 19, 97, 2, 'Профиль', 0),
(113, 2, 20, 112, 2, 'Страница', 0),
(114, 2, 21, 112, 2, 'Редактирование настроек', 0),
(115, 2, 22, 97, 2, 'Регистрация', 0),
(116, 2, 23, NULL, 2, 'Задачи', 1),
(117, 2, 24, 116, 2, 'Изменение родителя задачи', 0),
(118, 2, 25, 100, 2, 'Состояние задачи', 1),
(119, 2, 26, 100, 2, 'Приоритет задачи', 0),
(120, 2, 27, 118, 2, 'Создание своих состояний', 3),
(121, 2, 28, 119, 2, 'Создание своих приоритетов', 0),
(122, 2, 29, 109, 2, 'Drag&#039;n&#039;drop', 0),
(123, 2, 30, 117, 2, 'Drag&#039;n&#039;drop', 0),
(124, 3, 3, NULL, 3, 'Хранение настроек', 1),
(125, 2, 31, 102, 2, 'Запрет на доступ к важным файлам', 0),
(126, 3, 4, NULL, 3, 'Разобраться с классами вида Objects', 1),
(128, 3, 6, NULL, 3, 'Публичные свойства. За или против?', 1),
(129, 3, 7, NULL, 3, 'PHP 5 vs PHP 7', 1),
(130, 3, 8, 129, 3, 'Тест скорости с указанием строгой типизации и без', 1),
(131, 3, 9, NULL, 3, 'Система исключений', 3),
(132, 3, 10, 131, 3, 'JsonFileException', 3),
(133, 3, 11, 124, 3, 'Добавить исключение на неопознанное значение json настройки', 0),
(134, 3, 12, 124, 3, 'Настройки страниц http ошибок', 1),
(135, 3, 13, NULL, 3, 'Сайт самого фреймворка', 1),
(136, 3, 14, 135, 3, 'Верстка', 1),
(137, 3, 15, NULL, 3, 'Добавлять время последнего изменения к ресурсам как в Yii', 0),
(138, 3, 16, NULL, 3, 'Pager&#039;ы из Lightness 1', 0),
(139, 4, 1, NULL, 4, 'Убрать бесконечный прыжок', 1),
(140, 4, 2, NULL, 4, 'Адаптировать размеры под все экраны', 0),
(141, 4, 3, NULL, 4, 'Оптимизация', 1),
(142, 4, 4, 141, 4, 'Вместо удаления/создания новых блоков использовать уже существующие', 1),
(143, 4, 5, NULL, 4, 'Рефакторинг', 0),
(144, 4, 6, 143, 4, 'Разделить классы на нормальные пространства имен', 0),
(191, 3, 19, NULL, 11, 'Защита от CSRF', 1),
(146, 2, 32, NULL, 2, 'Категория задач по умолчанию: активные', 1),
(147, 2, 33, 116, 2, 'Страница задачи', 1),
(148, 2, 34, 147, 2, 'Действия с задачей (удалить, редактировать и т.д.)', 1),
(149, 3, 18, NULL, 3, 'Статические экшны?', 1),
(150, 5, 1, NULL, 5, 'Markdown', 0),
(156, 2, 35, NULL, 2, 'Подтверждения об удалении чего-либо', 0),
(157, 2, 36, 156, 2, 'Удаление задач', 0),
(158, 2, 37, 147, 2, 'Ссылка на родительскую задачу', 0),
(159, 2, 38, 147, 2, 'Список дочерних задач?', 0),
(160, 2, 39, 156, 2, 'Удаление проектов', 0),
(192, 3, 20, NULL, 11, 'Защита от Clickjacking', 0),
(193, 2, 41, NULL, 13, 'Автоматическое выделение названия новой группы при ее создании', 4),
(188, 2, 40, 156, 2, 'Удаление групп', 0),
(194, 2, 42, NULL, 13, 'Показывать группу задачи на странице ее добавления + на странице существующей задачи', 0),
(195, 3, 21, NULL, 14, 'Json', 1),
(196, 3, 22, NULL, 14, 'lightness.lib', 1),
(197, 2, 43, NULL, 15, 'При создании проекта нет стандартной группы &quot;Общее&quot;', 1),
(198, 10, 1, NULL, 16, 'Научится создавать плагины для Node', 1),
(199, 10, 2, 198, 16, 'Подготовить среду к этому', 1),
(200, 10, 3, NULL, 16, 'Выделение template в строку', 1),
(201, 10, 4, 200, 16, 'Убрать все переносы строк', 1),
(202, 10, 5, NULL, 16, 'Выделение CSS в отдельный файл', 1),
(229, 10, 19, 228, 23, 'Вынести общую часть из методов readStyle() и readStyleLang() в отдельный класс Style', 1),
(204, 10, 7, NULL, 16, 'Преобразование экспортируемой части &lt;script&gt; в содержимое компонента', 1),
(205, 10, 8, NULL, 16, 'Преобразование имени компонента относительно названия его файла', 1),
(206, 2, 44, NULL, 18, 'Расцветка кружков всех задач относительно цвета их группы', 4),
(207, 10, 9, 198, 16, 'Научится создавать плагины для Gulp', 1),
(208, 10, 10, 207, 16, 'Изучить Node', 1),
(209, 10, 11, 198, 16, 'Вообще для решения задачи попробовать Vue CLI', 1),
(210, 3, 23, NULL, 19, 'Behaviour', 3),
(211, 10, 12, 207, 16, 'Прочитать документацию по созданию плагинов в Gulp', 1),
(212, 10, 13, NULL, 16, 'Свой плагин для разбора путей по регулярному выражению', 1),
(213, 10, 14, 212, 16, 'adequate-file-finder', 1),
(214, 10, 15, 213, 16, 'Тесты', 1),
(215, 3, 24, NULL, 14, 'О ТЕСТАХ', 1),
(218, 3, 25, NULL, 3, 'Варианты улучшения Action', 1),
(217, 10, 17, 213, 16, 'Поддержка Windows-путей', 1),
(220, 11, 1, NULL, 22, 'Архитектура классов', 0),
(221, 11, 2, NULL, 22, 'Сканирование страниц', 0),
(222, 11, 3, 221, 22, 'Загрузка html кода страницы', 1),
(223, 11, 4, 222, 22, 'Год из аргументов программы', 1),
(224, 11, 5, 221, 22, 'Парсинг html', 0),
(225, 3, 26, NULL, 19, 'Тесная работа с request headers', 0),
(226, 11, 6, NULL, 22, 'Поиск ссылок на песни', 0),
(227, 11, 7, 226, 22, 'Выводить список песен, которые не были найдены на заданных по-умолчанию сайтах', 0),
(228, 10, 18, NULL, 23, 'Поддержка Sass', 1),
(230, 10, 20, 228, 23, 'Обновить README', 1),
(231, 10, 21, 229, 23, 'Обновить d.ts', 1),
(232, 3, 27, 218, 3, 'Избавление от псевдоодиночества', 1),
(233, 2, 45, NULL, 15, 'Исправить размер стиля &lt;code&gt; в текстах с Markdown', 1),
(234, 3, 28, 218, 3, 'Выделение состояния (результата) выполнения экшна в отдельный класс', 0),
(235, 3, 29, 218, 3, 'Редирект после завершения?', 1),
(236, 3, 30, 135, 3, 'Создать отдельный проект PDesigner для этого', 0),
(237, 2, 46, NULL, 15, 'Возможно, после создания нового проекта, на той же странице, группы не имеют контекстного меню', 1),
(238, 2, 47, NULL, 13, 'Нормальная (красивая) главная страница (лендинг)', 0),
(239, 12, 1, NULL, 25, 'Оптимизация', 0),
(240, 12, 2, 239, 25, 'Перед оптимизацией замерить метрики, чтобы сравнивать после', 0),
(241, 12, 3, NULL, 27, 'При работе с DirMask оперировать не с маской и os, а с маской и маской', 0),
(242, 3, 31, 218, 3, 'Ручной запуск экшнов', 4),
(243, 3, 32, NULL, 19, 'Queries', 1),
(244, 3, 33, NULL, 3, 'Документация', 0),
(245, 3, 34, NULL, 19, 'Выделить методы экшна, которые нужно переопределять, в ActionBody', 0),
(247, 3, 35, NULL, 19, 'Передача get аргументов в экшны как объекты с сериализацией', 0),
(248, 3, 36, NULL, 19, 'Убрать зависимость экшна от роутера', 4),
(250, 14, 1, NULL, 30, 'Динамические категории', 1),
(251, 14, 2, 250, 30, 'Добавление', 1),
(252, 14, 3, 250, 30, 'Переименовывание', 1),
(253, 14, 4, 250, 30, 'Удаление', 1),
(254, 14, 5, NULL, 31, 'Минимальная ширина таблицы', 0),
(255, 14, 6, NULL, 30, 'Сортировка по полям таблицы', 0),
(256, 14, 7, NULL, 30, 'Поиск', 1),
(257, 14, 8, NULL, 31, 'Не показывается Shadow виджет', 1),
(258, 14, 9, NULL, 31, 'Мигание кнопок Редактировать/Удалить при перемещении между итемами списка клавишами', 1),
(259, 14, 10, NULL, 35, 'Меню', 0),
(260, 2, 48, 96, 2, 'Запретить теги script и подобное в markdown описаниях', 0),
(261, 2, 49, NULL, 2, 'Mind Map для проектирования', 0),
(262, 14, 11, 250, 30, 'Иконка + кнопки &quot;Добавить категорию&quot;', 1),
(263, 3, 37, NULL, 3, 'Cash', 0),
(264, 2, 50, NULL, 15, 'В описаниях задач (может быть не только задач) в html несколько пробелов превращаются в один', 1),
(265, 3, 38, NULL, 3, 'Убрать виды виджетов', 3),
(266, 3, 39, NULL, 3, 'Убрать настройки вида viewPath и т.д.', 1),
(267, 2, 51, NULL, 15, 'Лаги при исчезновении задачи', 3),
(268, 3, 40, 191, 11, 'Всегда уникальный CSRF', 0),
(269, 3, 41, 268, 11, 'Вообще создать механизм токенов?', 0),
(270, 2, 52, NULL, 15, 'Большие названия проектов расширяют меню при его открытии', 1),
(271, 4, 7, NULL, 4, 'Написать README', 1),
(273, 5, 2, 150, 5, 'sub', 1),
(274, 5, 3, 273, 5, 'subsub', 2),
(275, 5, 4, NULL, 5, 'ex', 1),
(276, 5, 5, 150, 5, 'checked', 0),
(277, 2, 53, 118, 2, 'Блок для изменения состояния задачи на странице самой задачи', 1),
(278, 5, 6, 274, 5, 's3', 3),
(279, 5, 7, 278, 5, 's4', 4),
(280, 2, 54, NULL, 15, 'Какие-то странные ошибки в консоли', 1),
(281, 5, 8, NULL, 5, 'Spaces', 2);

-- --------------------------------------------------------

--
-- Структура таблицы `issue_groups`
--

CREATE TABLE `issue_groups` (
  `id` int(10) UNSIGNED NOT NULL,
  `project_id` int(10) UNSIGNED NOT NULL,
  `name` varchar(100) NOT NULL,
  `color_id` tinyint(3) UNSIGNED NOT NULL DEFAULT '4'
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

--
-- Дамп данных таблицы `issue_groups`
--

INSERT INTO `issue_groups` (`id`, `project_id`, `name`, `color_id`) VALUES
(1, 1, 'Общее', 4),
(2, 2, ' Новые фичи', 4),
(3, 3, 'Общее', 4),
(4, 4, 'Общее', 4),
(5, 5, '  Общее', 4),
(11, 3, ' Безопасность', 1),
(13, 2, '  Улучшения', 3),
(14, 3, ' Тесты', 4),
(15, 2, ' Баги', 1),
(16, 10, ' Основные цели', 2),
(18, 2, ' Предложения', 4),
(19, 3, ' Предложения', 3),
(21, 3, ' Проблемы/ошибки', 1),
(22, 11, ' Общее', 4),
(23, 10, ' Улучшения', 3),
(24, 12, ' Общее', 4),
(25, 12, ' Улучшения', 3),
(27, 12, ' Рефакторинг', 1),
(28, 14, ' Общее', 4),
(30, 14, ' Улучшения', 3),
(31, 14, ' Баги', 1),
(32, 14, '  Предложения', 2),
(33, 15, ' Общее', 4),
(35, 14, ' Рефакторинг', 1),
(36, 17, 'Общее', 4),
(37, 18, 'Общее', 4),
(38, 18, ' Новая группа', 4);

-- --------------------------------------------------------

--
-- Структура таблицы `issue_texts`
--

CREATE TABLE `issue_texts` (
  `id` int(10) UNSIGNED NOT NULL,
  `issue_id` int(10) UNSIGNED NOT NULL,
  `text` text NOT NULL
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

--
-- Дамп данных таблицы `issue_texts`
--

INSERT INTO `issue_texts` (`id`, `issue_id`, `text`) VALUES
(1, 49, 'http://learn.javascript.ru/csrf\r\n\r\nВместо классической реализации - скрытого поля в формах, проще будет передавать token в get параметре к экшну. Это будет не так затратно, но все так же безопасно.'),
(2, 75, 'https://yiiframework.com.ua/ru/doc/guide/2/security-best-practices/'),
(4, 48, 'PHP 7 изначально нужен был лишь для строгой типизации, чтобы (тупым) верстальщикам было проще найти ошибку, когда они передадут параметр неверного типа в функцию/метод.\r\n\r\nНо фреймворк не для (тупых) верстальщиков. Он для программистов, которые сами могут понять, что они передали неправильный тип (если вдруг они окажутся в такой ситуации). Поэтому из-за фреймворка можно использовать PHP 5.\r\n\r\nНедостатки PHP 5:\r\n- Там нет трейтов и некоторого другого функционала. Впрочем, они за все время так и не пригодились, так что можно даже не считать это недостатком;\r\n- Прийдется все документировать. В любом случае в планах все документировать, а незадокументированные блоки кода будут выливаться из общего задокументированного вида, это будет не элегантно. То есть, PHP 7 будет использовать не элегантно ибо там бессмысленно документировать типы данных. Поэтому это тоже не недостаток.\r\n\r\nИсходя из этого, собственно недостатков у PHP 5 особо и нет.\r\n\r\nНедостатки PHP 7:\r\n- PHP 5 сервера не будут поддерживать PHP 7.\r\n\r\nПреимущества PHP 5 перед PHP 7:\r\n- Поддержка PHP 5\r\n\r\nПреимущества PHP 7 перед PHP 5: их нет.\r\n\r\nРешено выбрать PHP 5.'),
(7, 96, 'Хороший вариант - markdown'),
(8, 124, '#### Вариант #1: php\r\n- Как ни странно, медленее остальных. \r\n+ Но дает наибольшую гибкость (использование переменных, разделение настроек на группы - массивы и т.д.)\r\n+ Символы точки в названиях настроек\r\n\r\n#### Вариант #2: ini\r\n- Совсем немного медленее, чем json\r\n- Разделение на группы только посредством секций, при чем секции нельзя вкладывать друг в друга\r\n+ Символы точки в названиях настроек\r\n\r\n#### Вариант #3: json\r\n+ Самый быстрый вариант\r\n+ Символы точки в названиях настроек\r\n+ Настройки можно группировать\r\n+ Группы можно вкладывать друг в друга (не бесконечно, но 512 раз вполне хватит)\r\n+ Изначально нативная совместимость с JavaScript'),
(9, 126, 'Чем плохи Objects?\r\n- На каждый модуль нужно создавать свои Objects. Ну как нужно, учитывая, что это теперь фреймворк, это дело конечных его пользователей, но все таки нужно тут самим что-то сделать, не дублировать же все объекты.\r\n- Objects методы просто дублируют создание объектов. Вся сама структура одинаковая. При чем это все пишется вручную. Может автоматизировать? Хммм... \r\n\r\nВариант #1: Просто убрать их ничем не заменяя, позволить создавать дублирующиеся объекты.\r\nЗа все время, эта возможность не оказалась слишком полезной. Да, конечно, есть очень частые объекты и с ними что-то нужно сделать, но только не Objects. Это слишком ужасно. Целый классы в каждом модуле, фи.\r\n\r\nВариант #1.1: Можно самые частые объекты сразу генерировать при старте модуля в самом классе модуля. И записывать эти переменные либо в сам класс модуля, либо создать класс типа App и записывать это туда. Кстати, App, как во Vuex - хранилище всего приложения, хмм?\r\n\r\nВариант #2: Создать класс, который все свои экземпляры сохраняет в себе по ключам, сгенерированных на основе входных параметров. И наследовать все классы от этого.\r\nОтказано: http://pdesigner.com/web/index.php?r=todo&amp;id=127\r\n\r\nОстается решение #1 с модификацией 1.'),
(10, 127, 'Вариант #1 : Каким-то образом отслеживать входные параметры в конструкторе и, если такие параметры уже были, то возвращать набор готовых данных.\r\n\r\nМинусы:\r\n- Все равно создаются новые объекты\r\n- При этом все данные дублируются... Кхм. Это еще хуже чем было.\r\n\r\n Отказано.\r\n\r\nВариант #2: Создать статический метод, заменяющий конструктор и делать все необходимое в нем.\r\n\r\nМинусы:\r\n- Если изменятся параметры в конструкторе, все время прийдется дергаться за этот статический метод.\r\n\r\nЕсли вообще подумать, каким образом генерировать ключи на основе входящих аргументов? \r\nА если, параметром будет массив на 1000 элементов? Массивы как объекты. Равность массивов сравнивается по элементам. Прийдется проходится по всем 1000 элементов и сравнивать?\r\nА если это будет огромный текст? Сранивать огромные тексты?\r\nВ итоге данное решение получается еще более непроизводительным, чем проблема.\r\n\r\nВообще отказано.'),
(11, 128, '+ Упрощает интерфейсы\r\n+ Выглядит довольно элегатно\r\n- Не по стандартам'),
(12, 130, 'Тест показал совершенно одинаковое время выполнения.'),
(13, 131, 'Исключения новых типов могут быть очень полезны. Например исключение JsonFileException:\r\n- в него можно поместить название файла, в котором возникла ошибка\r\n- состояние\r\n- данные\r\n- т. д.\r\n\r\nОбычное исключение такого не передаст.'),
(14, 133, 'Можно случайно незаметно сделать опечатку в настройке json, и потом долго и нудно пытаться понять почему что-то не работает как надо. Стоит говорить, когда значение неопознано.'),
(15, 134, 'Ассоциативный массив в конфиге?\r\n\r\n**Решение: почти**'),
(16, 138, 'Переделать работу pager&#039;ов как было в Lightness 1 (автоматическое исправление номера страницы).\r\nПри этом можно не редиректить а знать внутри. Хотя, если в будущем появятся ссылки можно и редиректить...\r\nНо редиректить мне СЕЙЧАС не нужно. Если что исправить не сложно. Тогда без редиректа.'),
(17, 140, '* setRelativeHeight(procent) устанавливает относительную высоту и автоматически устанавливает относительную ширину\r\n* setRelativeWidth(procent) устанавливает относительную ширину и автоматически устанавливает относительную высоту'),
(18, 142, 'Блоки которые ушли за экран перемещать на новое место, вместо их удаления и создания новых'),
(20, 149, 'Плюсы:\r\n* при ошибках не нужно перезагружать страницу\r\n\r\nМинусы:\r\n* как-то странно это выглядит'),
(25, 209, '**Попробовал**. Что вышло? По сути, оно отлично компилирует и собирает, даже production режим сразу есть, где код сжимается. Можно использовать в Gulp через пакет, позволяющий запускать команды. \r\n\r\nНо есть большое **НО:** Компоненты компилируются в ОГРОМНЫЙ файл (даже для сжатой версии). Очень много совершенно лишнего, ненужного кода, не имеющего ни малейшего отношения к компонентам Vue как и к самому Vue. *В основном это код webpack, а он сам по себе огромен + не факт, что будет работать в мобильных и т.д. браузерах*. Еще при этом всем компиляция занимает довольно много времени. Скомпилировать 2 маленьких-маленьких компонента - уходит как минимум 5 секунд. Это слишком много.\r\n\r\nТак что...Vue CLI - провальная идея. Создаем свой собственный плагин.'),
(21, 150, 'Text **bold**\r\n\r\n_Newline_ and *italic*\r\n\r\n## Header\r\n\r\n&#039;sds&#039;  \r\n&#039;\r\n\r\n&lt;u&gt;abc2&lt;/u&gt;\r\n&lt;s&gt;cbe&lt;/s&gt;\r\n\r\n&lt;script&gt;\r\nalert(&#039;hello&#039;);\r\n&lt;/script&gt;\r\n\r\n&amp;#039;\r\n\r\n&quot;'),
(22, 156, 'В виде модальных окон?'),
(26, 210, 'Поведение для Application. *Не обязательно сейчас, но может быть когда-нибудь пригодится.*'),
(27, 207, 'Появился такой вариант: не делать gulp плагин, а сделать отдельный модуль, который в самом gulp\'e можно использовать отдельно. В целом использование все равно так и задумывалось, так что...\r\n\r\n**Но есть проблема.** Скорее всего gulp сам отслеживает изменения в файлах и перекомпилирует только измененные. **Но может и нет.** Нужно прочитать документацию все таки...\r\n\r\nНо в целом, если это не так, то можно использовать как есть.'),
(28, 211, '* https://github.com/gulpjs/gulp/blob/master/docs/writing-a-plugin/README.md\r\n* https://github.com/gulpjs/gulp/blob/master/docs/writing-a-plugin/guidelines.md\r\n\r\n*Плюс ко всему разработчики советуют ознакомиться с хорошо написанными простыми плагинами. Я бы советовал посмотреть на код [gulp-replace](https://github.com/lazd/gulp-replace/blob/master/index.js)*\r\n\r\n**Из документации стало ясно, что эту утилиту не стоит реализовывать как gulp-плагин.** В скрипте gulp можно вызывать обычные node модули, а это вполне подойдет.\r\n\r\n**Вывод:** отмена gulp-плагина и реализация как обычная node-module утилита.'),
(29, 212, '# **В NPM НЕТ НОРМАЛЬНЫХ ДЛЯ ЭТОГО ПЛАГИНОВ. ВЫ ПРЕДСТАВЛЯЕТЕ??? НУ КАК ТАК?? КАК ОНИ ЖИВУТ ВООБЩЕ?? ОДИН ВООБЩЕ НЕ РАБОТАЕТ. ДРУГОЙ РАБОТАЕТ КРИВО. ТРЕТИЙ ЭТО ВООБЩЕ НЕ ТО, ЧТО НАДО. ААГХ. ВСЕ. ПРИЙДЕТСЯ ПИСАТЬ СВОЙ.**\r\n\r\n# **&gt;&gt;&gt;:**'),
(30, 213, 'Может пригодиться:\r\n* https://www.npmjs.com/package/match-file\r\n* https://www.npmjs.com/package/file-match\r\n* https://nodejs.org/docs/latest/api/path.html'),
(31, 215, 'Кажется, data provider - классная штука: https://phpunit.readthedocs.io/ru/latest/writing-tests-for-phpunit.html#writing-tests-for-phpunit-data-providers'),
(34, 218, 'На текущий момент экшны устроены таким образом: *Core* отлавливает все экшны из *url запроса*, создает их экземпляры и запускает действие экшна. Сам же экшн &quot;настраивается&quot; в клиентском коде **на страницах**. При этом, если был запущен экшн, то он сохраняется в переменную *app-&gt;action*.\r\n\r\nЧто это дает? Экшн запускается **до** страницы, и, если в экшне установлен соотвествующий *редирект*, то все объекты, что нужно инициализировать на последующей странице, не будут инициализированы ибо до страницы скрипт так и не дойдет. **То есть, никаких лишних (неиспользуемых) объектов далее создано не будет.** Далее, если редиректа не было, то на странице можно использовать *late-props* из самого экшна.\r\n\r\nНо, возникают проблемы: \r\n1. Нет гарантии, что при реализации очередного экшна будут использованы возможности *Late Props Object*, а тогда объекты на странице прийдется создавать повторно.\r\n2. Вообще это не обязанность экшна - создавать объекты и раздавать их всем.\r\n\r\nВарианты решения проблем:\r\n\r\n**1. Наплевать на эту проблему**. Вероятность того, что инициализация страницы будет устроена так, что перед самим экшном будет много объектов, что могут быть не использованы, не такая уж большая.\r\n\r\n**Отсюда вытекает:** так как мы не будем уделять внимание такой оптимизации, можно улучшить сам механизм экшнов: привязать экшны к странице. То есть, запускать экшн по *триггерному* параметру в url (а вообще, таковых может быть несколько (можно запускать сразу несколько экшнов сразу)).\r\n\r\n**Преимущества:**\r\n* Можно передавать целые параметры-объекты вместо параметров-строк\r\n* Если экшн без страницы не запустится, не нужно париться над проверкой доступа к экшну. Это можно проверять только на странице, а так как страница - более клиентский код, чем экшн, изменение правил доступа желательнее на странице (а значит, **делегировать проверку доступа к самому экшну - не такая хорошая идея**)\r\n* Так как не нужно добавлять проверки доступа к экшну, сами экшны можно комбинировать друг в друге ибо более они никогда не будут противоречить друг другу в доступе (доступ проверяется только страницей)\r\n* Внутренняя структура экшнов упрощается за счет удаления кода проверки доступа\r\n\r\n**Минусы:**\r\n* Есть вероятность, что объекты перед самим экшном могут так и не понадобиться, при редиректе\r\n* **Невозможно учесть все** параметры-объекты. Некоторые все равно прийдется создавать изнутри, а это почти аннулирует этот вариант. **Хотя**, самые основные и общие параметры то можно засчитать.\r\n\r\n**2. Передавать параметры-объекты из страницы в экшн (инверсия зависимостей)**. Это ведет к **варианту 1** ибо через url объекты при запуске экшна передать нельзя, только заранее, а значит только на странице.\r\n\r\n**3. Создавать параметры-объекты изнутри.** Сейчас так и делается.\r\n\r\n**4. Создавать параметры-объекты изнутри и не делиться с остальными.** Ну это совсем варварство.'),
(33, 217, '### Варианты\r\n\r\n#### 1. Поддержка обоих типов путей как на Linux, так и на Windows\r\nМогут возникнуть проблемы, хотя это очень универсальный вариант. Но с другой стороны, в Linux нельзя поддерживать D:, С: и другие варианты путей. А это ведь корень. Как тогда обратится к корню? Через / ? Но это уже Linux путь. Комбинировать пути? /dir\\\\dir2\\\\dir4/file.txt. Выглядит странно. Хотя тесты будут проходить.\r\n\r\nНо опять же, это довольно сложно. В чем сложность: нужно все равно преобразовать к какому-либо конечному варианту для поиска: либо к Linux, либо к Windows. Но вот только, если преобразовать к Linux, на Windows могут не искаться файлы. Если к Windows, то наоборот.\r\n\r\n#### 2. Поддержка путей Linux на Linux, и путей Windows на Windows\r\nЛогичный вариант. В тестах пути можно генерировать.\r\n\r\n#### 3. Поддержка только путей Linux как на Linux, так и на Windows\r\nМожет быть необходимость использовать именно Windows-пути (например в чужих модулях). **\r\n\r\n#### 4. Поддержка только путей Linux на Linux, а на Windows преобразовывать к путям Linux\r\nТакой вариант приводит к **варианту 3**.\r\n\r\n---\r\n\r\n### Вывод\r\n\r\nОстался 1 или 2 вариант. Первый сложный. Второй логичный.\r\n'),
(36, 221, 'https://losst.ru/osnovy-programmirovaniya-python#1-5'),
(37, 229, 'Style:\r\n+ getContent()\r\n+ getLang()\r\n+ getFormat() &lt;- Переменная styleLangFormats в index.js\r\n\r\nИзменения:\r\n1. Удалить VuefileDom.readStyleLang()\r\n2. VuefileDom.readStyle(): Style'),
(38, 232, '`$action = HelloAction::instance([&#039;message&#039; =&gt; $message], &#039;id-name&#039;);` \r\n\r\nзаменить на \r\n\r\n`$action = $this-&gt;linkAction(HelloAction::class, [&#039;message&#039; =&gt; $message], &#039;id-name&#039;);`\r\n\r\nТакже возможные варианты имени фабричного метода:\r\n- attachAction\r\n- createAction\r\n- linkAction\r\n- addAction\r\n- action\r\n\r\n**Пока что, было решено, что итак *(instance)* сойдет.**\r\n\r\nP.S. Действительно, instance нормальное, удобное имя и механизм.\r\n\r\n**&lt;u&gt;Тема закрыта т.к. изменять механизм установки экшнов без веской причины бессмысленно.&lt;/u&gt;**'),
(39, 233, 'Кхм: `&lt;code&gt;Вот такой вот стиль&lt;/code&gt;`'),
(40, 235, 'Убрать возможность настройки режима завершения экшна из .json.\r\n\r\n&gt; Но при статическом режиме, после неудачного выполнения экшна продолжает показываться страница, на которой он был выполнен, а тогда можно использовать информацию об ошибках и данных прямо из того же объекта экшна, что выполнялся, никуда их не сохраняя. Это более производительное решение, но тогда при перезагрузке страницы этот экшн будет выполнятся снова с теми же данными, даже если он не был вызван &quot;правильным&quot; путем.\r\n\r\nОтсюда следует, а зачем вообще включать статический режим? Оно кому-то надо? Если это и понадобится, то очень редко.\r\nДля того, чтобы настраивать режим завершения, можно было бы реализовать это через переопределение методов Action. А по-умолчанию в них установить завершение с редиректом.\r\n\r\nС другой стороны, это уже зачем-то реализовано так, как есть. И пока что (по крайней мере) это решение не является раздражительным и насильно вызывающим желание переделать это. *После переделки, могут выявится забытые причины, из-за которых это и реализовано как есть.*\r\n\r\n**Да, убираем к черту эту статическую возможность без редиректа. Она усложняет код и его структуру. Ради чего? Маленькая оптимизация, чтобы лишний раз не редиректить? О боже, да для этого есть: &lt;h1&gt;AJAX&lt;/h1&gt;**'),
(41, 237, 'Это могло просто показаться...\r\n\r\n**И показалось.**'),
(42, 241, 'Одна маска - сохраненная, вторая - сделанная как now.'),
(43, 242, '`($hello = new HelloAction($message))-&gt;listen()`\r\n\r\nили\r\n\r\n`($hello = new HelloAction())-&gt;setup([&#039;message&#039; =&gt; $message])`\r\n\r\nТам, где вызывается метод listen/setup, там же и будет выполнен экшн.'),
(44, 243, 'Запросы - подобные видам сущности, позволяющие получить любую запрограммированную в них информацию и не только.\r\n\r\nИспользование: \r\n- сложный запрос к БД вынести в *запрос*, и не дублировать его повсюду, а использовать *запросы*\r\n- **через ajax можно получать через эти запросы виды в чистом виде (без компоновщиков и тд)**\r\n\r\nВарианты реализации url:\r\n- как обычная страница (site.com/block (запросы приоритетнее и в первую очередь искать их?))\r\n- через get параметр q или query\r\n\r\n**Реализовано с помощью макросов.**'),
(45, 118, '* Завершено\r\n* Отложено\r\n* Заморожено\r\n* Не выполнено\r\n* Взято на выполнение / В процессе'),
(46, 234, 'В результат входят такие данные:\r\n* Статус выполнения (success/fail)\r\n* Переданные данные (get/post/files)\r\n* Ошибки\r\n\r\n**Решение: &lt;u&gt;Пока что нет веской причины реализовывать это и очевидного архитектурного решения задачи.&lt;/u&gt;**'),
(47, 245, 'Была предпринята попытка, но выяснилось, что тело экшна зависит от всего экшна в целом как $this, поэтому выделить его не удалось.\r\n\r\n**Решение: отложено.**'),
(48, 247, 'Идея передачи как args готовые сериализованные объекты и хранить их тех же session трансмиттерах, например. А тогда, возможно, можно вообще убрать разделение args/post и передавать все как одно. Плюсы передачи сериализованных объектов: не нужно делать лишние проверки на существование данных.\r\n\r\nВозможная реализация: создать статический класс, специализирующийся на сохранении экшнов. Использовать его после показа страницы. Все установленные на этой странице экшны сохранять в конце в сессии. А, те которые не сохранялись (сохранения прошлых установок) - удалять.'),
(49, 248, 'Чтобы убрать зависимость экшна от Router (в целом-то он от него не зависит, можно вынести этот метод в какой-нибудь ActionSetup или метод в view).\r\n\r\nЗависимость в: _public final function getUrl($router);_'),
(51, 254, 'На маленьких размерах экрана таблица просто не влезает, из-за чего вся программа вылазит за пределы экрана (когда программа не развернута на весь экран) или таблица вылазит за пределы программы (когда программа развернута на весь экран).'),
(52, 259, 'Сейчас меню - это один из множества эпицентров говнокода. Нужно сильно отрефакторить его.\r\n* Четко определить свойства\r\n* Четко определить методы\r\n* Задача класса виджета меню - быть виджетом. Никакой бизнес-логики. Только UI.'),
(53, 260, 'Почему это небезопасно? \r\n\r\n_Кто-то зальет скрипт, который редиректит на страницу удаления проекта. На страницу с описанием задачи зайдет обычный пользователь - его перенаправит куда подальше оттуда. Зайдет админ - будет весело._'),
(54, 263, '```php\r\ninterface Cash {\r\n    public static function set($key, $value);\r\n    public static function get($key);\r\n    public static function has($key);\r\n}\r\n\r\nclass StaticCash extends Cash; // like StaticTransmitter\r\nclass FileCash extends Cash;\r\n\r\nclass ObjectedCash { // maybe\r\n    public function set($key, $value);\r\n    public function get($key);\r\n    public function has($key);\r\n}\r\n\r\n// Using\r\nclass User {\r\n    public function setId($id) {\r\n        if (Cash::has(&quot;user_$id&quot;) $this-&gt;dbData = Cash::get(&quot;user_$id&quot;);\r\n        else $this-&gt;dbData = ... ; Cash::set(..., $this-&gt;dbData);\r\n    }\r\n    public function changeLogin($newLogin) {\r\n        $this-&gt;dbData[&#039;login&#039;] = $newLogin; // array is link, so data in array is also changed\r\n    }\r\n}\r\n```'),
(55, 265, 'Виджеты и блоки - это одно и то же. Единственное, что их различает это логическое использование. Любой виджет может быть блоком, но не каждый блок будет виджетом.\r\n\r\nТак как их реализация, по сути, одинакова, в реализации виджетов нет смысла. Если сильно нужно будет логически отличить, например, глобальные блоки от виджетов, можно просто разделить их по разным папкам в *view/blocks*.'),
(56, 266, 'Такие настройки создают структуру проекта. Но одно из целей фреймворка - **строгое структурирование компонент и кода** проекта, благодаря чему при разростании проекта проще понять что где находится, зная лишь структуру самого фреймворка.\r\n\r\nТак как подобные настройки &quot;убивают&quot; эту особенность + требуется считывать больше настроек из файла (больше нагрузки), стоит убрать их вообще и **заменить константами**.\r\n\r\n**Конфиги предназначены для возможного изменения настроек сайта из его интерфейса (например, админки)**. Если прямо из админки поменять, например, папку видов, сайт после этого сразу ляжет ибо такой папки то еще нет (может быть еще не переименовали).'),
(57, 267, 'Когда задача должна красиво &quot;свернуться&quot;, при непривыкшем браузере к js-скрипту анимации (первый раз воспроизводится, незакешировалось еще), анимации нет и задача просто некрасиво исчезает. Видимо это из-за того, что где-то стоит setTimeout на время, равное времени анимации. Надо сделать именно callback на конец анимации и только в нем уже убирать задачу.\r\n\r\n...Ну оно так и сделано же. Наверно это просто jquery лагает.'),
(58, 268, 'https://tproger.ru/translations/user-session-security/\r\n\r\n&gt; Чтобы оставаться в системе, и злоумышленник, и жертва должны запросить у сервера новый токен доступа пока действует текущий (украденный) токен. Оба будут делать это, используя один и тот же токен доступа, поэтому если он используется для запроса дважды, то система может определить, что произошла кража (зависит от реализации фронтенда).\r\n\r\nИдея в том, чтобы хранить где-то номер запроса. И после каждого запроса увеличивать его на 1, например. Тогда если пользователь выполнит запрос, ожидаемый токен обновится на 1 и злоумышленник уже будет иметь старый недействительный токен. Увеличивать на 1, конечно, слишком очевидно, так что можно для каждого пользователя еще и определять свой инкремент.\r\n\r\nГде хранить?\r\n\r\nМожно как-то зашифровывать это в идентификаторе самого пользователя. Вообще сделать какой-нибудь класс типа ClientId и зашифровывать туда все что можно. Оно само будет и зашифровываться и расшифровываться. Тогда у пользователя будут все данные о безопасности в одном месте, которое постоянно обновляется. И при каждом изменении, просто обновлять id клиента, который находится где-то в куках например.\r\n\r\nClient id можно хранить и в сессиях, но сессия недолговечна, а информация, которая там хранится может понадобится на долго.'),
(60, 281, 'a  \r\ns  s\r\n&lt;u&gt;abc&lt;/u&gt;'),
(61, 264, '&lt;u&gt;Это нормально&lt;/u&gt;.');

-- --------------------------------------------------------

--
-- Структура таблицы `projects`
--

CREATE TABLE `projects` (
  `id` int(10) UNSIGNED NOT NULL,
  `name` varchar(100) NOT NULL
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

--
-- Дамп данных таблицы `projects`
--

INSERT INTO `projects` (`id`, `name`) VALUES
(1, 'Lightness'),
(2, 'Project Designer'),
(3, 'Lightness Framework'),
(4, 'Platform Runner'),
(5, 'Test'),
(10, 'Vue Component JSfy'),
(11, 'Python: Best Songs Scanner'),
(12, 'Backupper'),
(14, 'Listpad'),
(15, 'Linkpad');

-- --------------------------------------------------------

--
-- Структура таблицы `project_descriptions`
--

CREATE TABLE `project_descriptions` (
  `id` int(10) UNSIGNED NOT NULL,
  `project_id` int(10) UNSIGNED NOT NULL,
  `description` text NOT NULL
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

--
-- Дамп данных таблицы `project_descriptions`
--

INSERT INTO `project_descriptions` (`id`, `project_id`, `description`) VALUES
(2, 5, 'Text **bold**\r\n\r\n_Newline_ and *italic*\r\n\r\n## Header\r\n\r\n&lt;u&gt;abc&lt;/u&gt;  \r\nsdssdsds\r\n\r\n&#039;\r\n\r\n&lt;script&gt;alert(&#039;hello&#039;);&lt;/script&gt;'),
(5, 2, '### Описание проекта\r\n\r\nProject Designer должен стать хорошей, лучшей альтернативой ведения отчетов, проблем, ошибок, информации, описания и т. д. проектов, вместо Microsoft Word документов.\r\n\r\nWord документы слишком большие, поэтому находить и редактировать их слишком сложно. Нужно все время прокручивать их вниз для добавления новой записи и т. д. Это ужасно. Поэтому Web версия таких документов будет более лучше. Там будет возможность создавать задания, группировать их, описывать проекты, комментировать их и прочее.\r\n\r\nКонечно, в интернете уже полно таких «велосипедов», но все они уж слишком не подходят. Какие-то слишком страшные. Другие платные. Третьи просто не поддерживают нужный функционал. Потому данный проект и станет решением всех этих проблем.\r\n\r\n### Требования\r\n\r\nПроект должен быть создан на PHP Yii Framework 2. Также плюсом будет использование Bootstrap, Less/Sass или других препроцессоров.\r\n\r\nВ целом, создание проекта является способом наработки опыта и навыков с помощью фрейморков и библиотек. Поэтому большим плюсом будет использования большего количества дополнительных технологий.\r\n\r\n**Важно**: это не движок и не похожее на это. Этот проект прямо нацелен на результат, так что не нужно думать над тем, чтобы сделать его универсальным. Для этого есть Lightness.\r\n\r\nКстати. А где же Lightness? Почему не с помощью него создавать данный сайт? Он ведь создавался, чтобы быть универсальным. Ответ: да, он бы неплохо подошел. Там есть уже готовые большие модули Core &amp; Users, которые делают много работы. Пришлось бы лишь написать еще пару модулей. Но данный проект существует лишь ради изучения различных готовых технологий, поэтому Lightness, не подойдет.'),
(8, 3, '### Механизмы\r\n\r\nЧасти фреймворка, которые решают определенные проблемы.\r\n\r\n1. Роутинг - централизует выбор страниц и т.д.\r\n2. Виды - устраняют дублирование в верстке и других представлениях\r\n3. Конфиги- централизованность настроек\r\n4. БД - обеспечивает централизованный доступ к базе данных и упрощает выполнение запросов\r\n5. Экшны - упрощают обработку форм и других запросов\r\n6. Обработчики ошибок - название говорит само за себя\r\n7. Макросы - выполнение специальных действий, активируемых GET-параметрами.'),
(9, 10, '### Node плагин для нормальной компиляции Vue компонентов.\r\n\r\n**Основная проблема:** все &quot;компиляторы&quot; Vue-компонентов &quot;компилируют&quot; их в какое-то **дерьмо** вместо нормального JS-компонента. Поэтому выход один: написать свой собственный Node плагин для нормальной компиляции.'),
(10, 11, 'Нужна практика на Python. Почему бы не перевести тот JS-скрипт для вывода списка всех хитов из гугл за заданный год? Можно даже сразу со списком ссылок на песни.\r\n\r\n**На Python можно сделать все.**\r\n\r\nПолезные ссылки:\r\n* https://losst.ru/osnovy-programmirovaniya-python\r\n* https://habr.com/post/280238/\r\n* http://docs.python-requests.org/en/master/\r\n\r\nСтоит посмотреть при изучении Python:\r\n* https://habr.com/post/135913/\r\n'),
(12, 14, 'Хранение списка фильмов и сериальчиков и многих других вещей (на что ивзращенного разума хватит).');

-- --------------------------------------------------------

--
-- Структура таблицы `users`
--

CREATE TABLE `users` (
  `id` int(10) UNSIGNED NOT NULL,
  `username` varchar(25) NOT NULL,
  `password` varchar(25) NOT NULL,
  `authKey` varchar(25) NOT NULL,
  `accessToken` varchar(25) NOT NULL
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

--
-- Дамп данных таблицы `users`
--

INSERT INTO `users` (`id`, `username`, `password`, `authKey`, `accessToken`) VALUES
(1, 'Admin', '0000', 'key', 'token');

--
-- Индексы сохранённых таблиц
--

--
-- Индексы таблицы `issues`
--
ALTER TABLE `issues`
  ADD PRIMARY KEY (`id`);

--
-- Индексы таблицы `issue_groups`
--
ALTER TABLE `issue_groups`
  ADD PRIMARY KEY (`id`);

--
-- Индексы таблицы `issue_texts`
--
ALTER TABLE `issue_texts`
  ADD PRIMARY KEY (`id`);

--
-- Индексы таблицы `projects`
--
ALTER TABLE `projects`
  ADD PRIMARY KEY (`id`);

--
-- Индексы таблицы `project_descriptions`
--
ALTER TABLE `project_descriptions`
  ADD PRIMARY KEY (`id`);

--
-- Индексы таблицы `users`
--
ALTER TABLE `users`
  ADD PRIMARY KEY (`id`);

--
-- AUTO_INCREMENT для сохранённых таблиц
--

--
-- AUTO_INCREMENT для таблицы `issues`
--
ALTER TABLE `issues`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=282;
--
-- AUTO_INCREMENT для таблицы `issue_groups`
--
ALTER TABLE `issue_groups`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=39;
--
-- AUTO_INCREMENT для таблицы `issue_texts`
--
ALTER TABLE `issue_texts`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=62;
--
-- AUTO_INCREMENT для таблицы `projects`
--
ALTER TABLE `projects`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=19;
--
-- AUTO_INCREMENT для таблицы `project_descriptions`
--
ALTER TABLE `project_descriptions`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=13;
--
-- AUTO_INCREMENT для таблицы `users`
--
ALTER TABLE `users`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=2;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
